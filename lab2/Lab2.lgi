41 2 0
38 1
22 5 25 280 5 0 \NUL
Vishal Damojipurapu, vdamojp@ucsc.edu
22 6 47 451 27 0 \NUL
Lab 2: INTRODUCTION TO LOGIC WITH MULTIMEDIA LOGIC PART B
22 7 71 59 51 0 \NUL
1/26/18
22 7 95 138 75 0 \NUL
1D, Carlos Ramirez
7 469 126 518 77 0 1
7 471 172 520 123 0 1
7 471 213 520 164 0 1
7 469 265 518 216 0 1
8 227 266 276 217 1 0
8 225 321 274 272 1 0
8 228 371 277 322 1 0
8 225 426 274 377 1 0
11 643 354 670 256 0 1
22 174 252 212 232 0 \NUL
Bit[3]
22 169 309 207 289 0 \NUL
Bit[2]
22 174 358 212 338 0 \NUL
Bit[1]
22 165 409 203 389 0 \NUL
Bit[0]
22 535 109 643 89 0 \NUL
Bit Output[3] = 8
22 533 158 641 138 0 \NUL
Bit Output[2] = 4
22 538 202 646 182 0 \NUL
Bit Output[1] = 2
22 537 253 645 233 0 \NUL
Bit Output[0] = 1
22 167 473 561 453 0 \NUL
Toggled the switches to see how the input affects the output.
22 167 501 440 481 0 \NUL
Each bit has its own affect on the display.
22 167 524 630 504 0 \NUL
For example, Bit[3] refers to 2^3 = 8, which is the output on the display.
1 273 241 470 101
1 271 296 472 147
1 274 346 472 188
1 271 401 470 240
1 273 241 644 320
1 644 326 271 296
1 644 332 274 346
1 271 401 644 338
38 2
22 6 28 285 8 0 \NUL
Vishal Damojipurapu, vdamojip@ucsc.edu
22 5 51 445 31 0 \NUL
Lab2: INTRODUCTION TO LOGIC WITH MULTIMEDIA LOGIC PART C
22 7 75 59 55 0 \NUL
1/26/18
22 6 97 137 77 0 \NUL
1D, Carlos Ramirez
8 41 172 90 123 1 0
7 677 229 726 180 0 1
8 43 230 92 181 1 0
8 51 296 100 247 1 0
20 140 157 199 138 0
IN[2]
20 140 215 199 196 0
IN[1]
20 137 282 196 263 0
IN[0]
19 229 157 288 138 0
IN[2]
19 244 225 303 206 0
IN[1]
19 233 280 292 261 0
IN[0]
3 440 108 489 59 1 0
4 590 233 639 184 2 0
22 1 158 35 138 0 \NUL
IN[2]
22 5 218 39 198 0 \NUL
IN[1]
22 5 283 39 263 0 \NUL
IN[0]
3 467 200 516 151 1 0
5 394 185 443 136 0
5 384 225 433 176 0
3 484 267 533 218 1 0
5 394 277 443 228 0
5 350 318 399 269 0
5 351 372 400 323 0
5 351 426 400 377 0
3 480 349 529 300 1 0
22 731 211 777 191 0 \NUL
Output
22 198 503 548 483 0 \NUL
Implemented the truth table provided in the Lab2 pdf. 
22 199 531 423 511 0 \NUL
Each sender has its own receiver 
1 87 147 141 147
1 89 205 141 205
1 97 271 138 272
1 285 147 441 69
1 300 215 441 83
1 289 270 441 97
1 486 83 591 194
1 636 208 678 204
1 285 147 395 160
1 440 160 468 161
1 300 215 468 175
1 289 270 385 200
1 430 200 468 189
1 513 175 591 203
1 285 147 395 252
1 440 252 485 228
1 300 215 485 242
1 289 270 485 256
1 530 242 591 213
1 285 147 351 293
1 300 215 352 347
1 289 270 352 401
1 396 293 481 310
1 397 347 481 324
1 481 338 397 401
1 526 324 591 222
38 3
22 6 28 285 8 0 \NUL
Vishal Damojipurapu, vdamojip@ucsc.edu
22 5 51 446 31 0 \NUL
Lab2: INTRODUCTION TO LOGIC WITH MULTIMEDIA LOGIC PART D
22 7 75 59 55 0 \NUL
1/26/18
22 6 97 137 77 0 \NUL
1D, Carlos Ramirez
7 718 198 767 149 0 1
34 121 296 170 247 0 0
8 39 245 88 196 1 1
8 424 319 473 270 1 0
8 395 204 444 155 1 0
3 620 201 669 152 0 0
35 487 175 536 126 0 1
35 526 345 575 296 0 1
20 216 344 275 325 0
IN[4]
20 228 267 287 248 0
IN[3]
19 422 368 481 349 0
IN[4]
19 297 140 356 121 0
IN[3]
22 719 222 765 202 0 \NUL
Output
22 17 406 453 386 0 \NUL
Used the inverse of XOR to finish the logic for the guessing game. 
22 16 436 406 416 0 \NUL
The user must guess the correct inputs for the light to be lit.
22 21 465 576 445 0 \NUL
The random generator produces a random output when the push button is clicked on. 
1 122 286 85 220
1 719 173 666 176
1 488 164 441 179
1 527 306 470 294
1 621 190 572 320
1 621 162 533 150
1 488 136 353 130
1 478 358 527 334
1 167 292 217 334
1 167 250 229 257
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
